{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.html",
    "..\\src\\components\\modal.html",
    "..\\src\\components\\table.html",
    "..\\src\\forms\\vkGroups.html"
  ],
  "sourcesContent": [
    "<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n\t<a class=\"navbar-brand\" href=\"/\">{appName}</a>\n\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n\t aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t<span class=\"navbar-toggler-icon\"></span>\n\t</button>\n\n\t<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t<ul class=\"navbar-nav mr-auto\">\n\t\t\t{#if rightsReady}\n\t\t\t\t{#each Navigations as link} \n\t\t\t\t\t{#if link.dropdown}\n\t\t\t\t\t<li class=\"nav-item dropdown\">\n\t\t\t\t\t\t<a class=\"nav-link dropdown-toggle\" href=\"/{link.value}\" id=\"navbar-{link.value}\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded=\"false\">\n\t\t\t\t\t\t\t{link.name}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"navbar-{link.value}\">\n\t\t\t\t\t\t\t{#each link.dropdown as dropdownLink}\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"/{link.value}{dropdownLink.value}\">{dropdownLink.name}</a>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t{:else}\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link {path == '/'+link.value ? 'active' : ''}\" href=\"/{link.value}\">{link.name}</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t{/if} \n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</ul>\n\t\t{#if rightsReady}\n\t\t<form class=\"form-inline my-2 my-lg-0\">\n\t\t\t{#if sessionName}\n\t\t\t<span style=\"color: white; padding-right: 15px;\">Здравствуйте, {sessionName}</span>\n\t\t\t<a href=\"/session/end\" class=\"btn btn-outline-light\">Выйти</a>\n\t\t\t{:else}\n\t\t\t<button type=\"button\" class=\"btn btn-outline-light\" on:click=\"set({ modal: { component: 'AuthForm', name: 'Авторизация' } })\">Авторизация</button>\n\t\t\t{/if}\n\t\t</form>\n\t\t{/if}\n\t</div>\n</nav>\n\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t{#if BreadCrumbs}\n\t\t<div class=\"col-md-6\">\n\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t<ol class=\"breadcrumb\">\n\t\t\t\t\t{#each BreadCrumbs as BreadCrumb}\n\t\t\t\t\t<li class=\"breadcrumb-item {BreadCrumb.last ? 'active' : ''}\"><a href=\"{BreadCrumb.link}\">{BreadCrumb.name}</a></li>\n\t\t\t\t\t<!-- <li class=\"breadcrumb-item active\" aria-current=\"page\">Library</li> -->\n\t\t\t\t\t{/each}\n\t\t\t\t</ol>\n\t\t\t</nav>\n\t\t</div>\n\t\t{/if}\n\t\t<svelte:component  this={ComponentLink} rights={rights} />\n\t</div>\n</div>\n\n<div id=\"toast\" class=\"{toast.type}\">\n\t<div id=\"img\" class=\"{toast.type}\">\n\t\t{#if toast.type == 'success'}\n\t\t<i class=\"material-icons\">done</i>\n\t\t{:elseif toast.type == 'warning'}\n\t\t<i class=\"material-icons\">warning</i>\n\t\t{:elseif toast.type == 'danger'}\n\t\t<i class=\"material-icons\">close</i>\n\t\t{/if}\n\t</div>\n\t<div id=\"desc\" class=\"{toast.type}\">{toast.text}</div>\n</div>\n\n{#if modal && modal.component}\n<Modal title=\"{modal.name}\" component=\"{modal.component}\" formStore={formStore} />\n{/if}\n\n{#if newOrder}\n<div class=\"card\" id=\"newOrder\">\n  <div class=\"card-body text-center\">\n    <h5 class=\"card-title\">\n\t\tНовый заказ\n\t\t<i class=\"material-icons pointer\" style=\"position: absolute; top: 10px; right: 10px;\" title=\"Очистить заказ\" on:click=\"clearOrder()\">close</i>\n\t</h5>\n\t<p class=\"card-text text-left\">\n\t\t{#if newOrder.vkGroups}\n\t\t\tВК-группы - {newOrder.vkGroups.length} шт.<br>\n\t\t{/if}\n\t\t{#if newOrder.packages}\n\t\t\tПакеты - {newOrder.packages.length} шт.<br>\n\t\t{/if}\n\t\tCтоимость - {newOrder.price} руб.</p>\n    <button class=\"btn btn-success pulse\" on:click=\"set({ modal: { name: 'Новый заказ', component: 'OrderForm' } })\">Оформить заказ</button>\n  </div>\n</div>\n{/if}\n\n<script>\n\timport VkGroups from './components/vkGroups.html';\n\timport Packages from './components/packages.html';\n\timport Users from './components/users.html';\n\timport Orders from './components/orders.html';\n\timport Modal from './components/modal.html';\n\timport { Store } from 'svelte/store.js';\n\timport PhalconApi from './phalconApi.js';\n\n    const formStore = new Store({\n        app: null\n\t});\n\n\texport default {\n\t\tcomponents: { VkGroups, Packages, Modal, Orders },\n\n\t\tdata() {\n            return { \n\t\t\t\tformStore \n\t\t\t};\n\t\t},\n\t\t\n\t\tcomputed: {\n\t\t\tNavigations: ({ links, rights }) => {\n\t\t\t\tif(Object.keys(rights).length){\n\t\t\t\t\tfunction modifyPathName(path){\n\t\t\t\t\t\tvar componentName;\n\n\t\t\t\t\t\tif(path.split('-').length > 1){\n\t\t\t\t\t\t\tcomponentName = '';\n\t\t\t\t\t\t\tpath.split('-').forEach(function(namePart){\n\t\t\t\t\t\t\t\tcomponentName += namePart.charAt(0).toUpperCase() + namePart.slice(1);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomponentName = path.charAt(0).toUpperCase() + path.slice(1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn componentName;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinks = links.map(function(link){\n\t\t\t\t\t\tvar componentName;\n\n\t\t\t\t\t\tif(link.dropdown){\n\t\t\t\t\t\t\tlink.dropdown = link.dropdown.map(function(dropdownLink){\n\t\t\t\t\t\t\t\tif(dropdownLink.value != ''){\n\t\t\t\t\t\t\t\t\tvar path = dropdownLink.value.split('/').pop();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcomponentName = modifyPathName(path);\n\t\t\t\t\t\t\t\t\tif(!rights[componentName] || rights[componentName].indexOf('index') == -1) return null;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn dropdownLink;\n\t\t\t\t\t\t\t}).filter(dropdownLink => dropdownLink);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcomponentName = modifyPathName(link.value);\n\t\t\t\t\t\tif(!rights[componentName] || rights[componentName].indexOf('index') == -1) return null;\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn link; \n\t\t\t\t\t}).filter(link => link);\n\t\t\t\t}\n\n\t\t\t\treturn links;\n\t\t\t},\n\n\t\t\tComponentLink: ({ componentName, rights }) => {\n\t\t\t\tif (componentName === 'VkGroups' && rights.VkGroups) return VkGroups;\n\t\t\t\tif (componentName === 'Packages' && rights.Packages) return Packages;\n\t\t\t\tif (componentName === 'Users' && rights.Users) return Users;\n\t\t\t\tif (componentName === 'Orders' && rights.Orders) return Orders;\n\t\t\t},\n\n\t\t\tBreadCrumbs: ({ path }) => {\n\t\t\t\tvar breadcrumbs = path.split('/');\n\t\t\t\t\n\t\t\t\tvar link = '';\n\t\t\t\tbreadcrumbs = breadcrumbs.map(function(item, index){\n\t\t\t\t\tif (index == 0) return false;\n\t\t\t\t\tvar newItem = {};\n\t\t\t\t\t\n\t\t\t\t\tlink += '/' + item;\n\t\t\t\t\tnewItem.link = link;\n\t\t\t\t\tnewItem.last = false; \n\t\t\t\t\tif(item == 'vk-groups') newItem.name = 'ВК-группы';\n\t\t\t\t\tif(item == 'packages') newItem.name = 'Пакеты';\n\t\t\t\t\tif(item == 'users') newItem.name = 'Пользователи';\n\t\t\t\t\tif(item == 'orders') newItem.name = 'Заказы';\n\t\t\t\t\tif(index == breadcrumbs.length - 1) newItem.last = true; \n\n\t\t\t\t\treturn newItem;\n\t\t\t\t}).filter(breadcrumb => breadcrumb);\n\t\t\t\t\n\t\t\t\tconsole.log('breadcrumbs', breadcrumbs);\n\t\t\t\tif(breadcrumbs[0] && breadcrumbs[0].link == '/') breadcrumbs = null;\n\n\t\t\t\treturn breadcrumbs;\n\t\t\t}\n\t\t},\n\n\t\toncreate() {\n\t\t\tformStore.on('state', ({ changed, current }) => {\n                if (changed.isLoad) {\n                    formStore.set({ isLoad: false });\n                }\n\n                if(changed.isClose){\n                    this.set({ modal: null });\n                    formStore.set({ isClose: false });\n                }\n\t\t\t});\n\t\t\t\n\t\t\tPhalconApi.session.get().then(session => {\n\t\t\t\tconst path = window.location.pathname.split('/').pop();\n\t\t\t\tconst componentName = this.modifyPathName(path);\n\t\t\t\tconst rights = JSON.parse(session.rights);\n\t\t\t\tconst rightsReady = true;\n\t\t\t\tconst sessionName = session.name;\n\t\t\t\t\n\t\t\t\tthis.set({ componentName, rights, rightsReady, sessionName, session });\n\t\t\t});\n\t\t},\n\n\t\tmethods: {\n\t\t\ttoast(type, text) {\n\t\t\t\tthis.set({ toast: {type, text} });\n\t\t\t\tvar x = document.getElementById(\"toast\")\n\t\t\t\tx.classList.add(\"show\");\n\t\t\t\tsetTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n\t\t\t},\n\n\t\t\tmodifyPathName(path) {\n\t\t\t\tvar componentName;\n\n\t\t\t\tif(path.split('-').length > 1){\n\t\t\t\t\tcomponentName = '';\n\t\t\t\t\tpath.split('-').forEach(function(namePart){\n\t\t\t\t\t\tcomponentName += namePart.charAt(0).toUpperCase() + namePart.slice(1);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcomponentName = path.charAt(0).toUpperCase() + path.slice(1);\n\t\t\t\t}\n\n\t\t\t\treturn componentName;\n\t\t\t},\n\n\t\t\tclearOrder() {\n\t\t\t\tvar { componentName, newOrder } = this.get();\n\t\t\t\tnewOrder = null; localStorage.setItem('newOrder', newOrder);\n\n\t\t\t\twindow.location.reload();\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<style>\n\tnav{\n\t\tmargin-bottom: 25px;\n\t}\n\n\t#newOrder{\n\t\tposition: fixed;\n\t\tbottom: 15px; right: 15px; \n\t\twidth: 250px;\n\t\ttransition: transform 250ms;\n\t\ttransform: translateY(72%);\n\t}\n\n\t#newOrder:hover{\n\t\ttransform: translateY(0) !important;\n\t}\n</style>",
    "<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-label\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"modal-label\">{title}</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <svelte:component this={ComponentLink} formStore={formStore}/>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Отмена</button>\r\n        <button type=\"button\" class=\"btn btn-success\" on:click=\"createModel()\">Сохранить</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n    import VkGroupsForm from '../forms/vkGroups.html';\r\n    import PackagesForm from '../forms/packages.html';\r\n    import OrderForm from '../forms/orders.html';\r\n    import AuthForm from '../forms/auth.html';\r\n    import UsersForm from '../forms/users.html';\r\n    import nativeToast from 'native-toast';\r\n    import PhalconApi from '../phalconApi.js';\r\n    \r\n\texport default {\r\n        components: { VkGroupsForm, PackagesForm, OrderForm },\r\n        \r\n        computed: {\r\n            ComponentLink: ({ component }) => {\r\n\t\t\t\tif (component === 'VkGroupsForm') return VkGroupsForm;\r\n\t\t\t\tif (component === 'PackagesForm') return PackagesForm;\r\n\t\t\t\tif (component === 'AuthForm') return AuthForm;\r\n                if (component === 'OrderForm') return OrderForm;\r\n                if (component === 'UsersForm') return UsersForm;\r\n\t\t\t}\r\n        },\r\n\r\n\t\toncreate() {\r\n            const self = this;\r\n\r\n            $('#modal').modal('show');\r\n            $('#modal').on('hidden.bs.modal', function () {\r\n                self.close();\r\n            })\r\n        },\r\n        \r\n        ondestroy() {\r\n            \r\n        },\r\n\r\n        methods: {\r\n            close(){\r\n                const { formStore } = this.get();\r\n\r\n                formStore.set({ isClose: true });\r\n                this.destroy();\r\n            },\r\n\t\t\tcreateModel() {\r\n                var { component, formStore } = this.get();\r\n                \r\n\r\n                if(component == 'VkGroupsForm'){\r\n                    var { vkGroupId, name, screenName, avatar, fetchGroupList, vkGroup } = formStore.get();\r\n\r\n                    if(vkGroup){\r\n                        PhalconApi.vkGroups.update(vkGroup.id, vkGroup).then(response => {\r\n                            if(response.status == 200) this.options.root.toast('success', 'Группа успешно обновлена!');\r\n                            formStore.set({ isLoad: true });\r\n                            $('#modal').modal('hide');\r\n                        });\r\n                    } else\r\n\r\n                    if(fetchGroupList && fetchGroupList.length > 0){\r\n                        PhalconApi.vkGroups.insert(fetchGroupList).then(status => {\r\n                            if(status == 200) this.options.root.toast('success', 'Группы успешно добавлены!');\r\n                            formStore.set({ isLoad: true });\r\n                            $('#modal').modal('hide');\r\n                        });\r\n                    } else\r\n                    \r\n                    if(vkGroupId){\r\n                        var data = { vkGroupId, name, screenName, avatar };\r\n                        PhalconApi.vkGroups.create(data).then(status => {\r\n                            if(status == 200) this.options.root.toast('success', 'Группы успешно добавлены!');\r\n                            formStore.set({ isLoad: true });\r\n                            $('#modal').modal('hide');\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if(component == 'PackagesForm'){\r\n                    console.log('PackagesForm save', PackagesForm);\r\n                    var { name, price, groups, component } = formStore.get();\r\n\r\n                    PhalconApi.packages.create({ name, price, groups }).then(status => {\r\n                        if(status == 200) this.options.root.toast('success', 'Группы успешно добавлены!');\r\n                        formStore.set({ isLoad: true });\r\n                        $('#modal').modal('hide');\r\n                    });\r\n                }\r\n\r\n                if(component == 'AuthForm'){\r\n                    var { email, password } = formStore.get();\r\n                    PhalconApi.session.start({ email, password }).then(status => {\r\n                        console.log(status);\r\n                        if(status == 404) { \r\n                            this.options.root.toast('danger', 'Пользователь не найден!');\r\n                        } else \r\n\r\n                        if(status == 401) {\r\n                            this.options.root.toast('danger', 'Неверный пароль!');\r\n                        } else\r\n\r\n                        if(status == 200) {\r\n                            this.options.root.toast('success', 'Авторизация прошла успешно!');\r\n                            setTimeout(function(){\r\n                                window.location.replace(\"/vk-groups\");\r\n                            }, 1000);\r\n                        } else {\r\n                            this.options.root.toast('danger', 'Ошибка, обратитесь к администратору!');\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if(component == 'OrderForm'){\r\n                    const { order } = formStore.get();\r\n                    if(order.id){\r\n                        PhalconApi.orders.update(order.id, order).then(response => {\r\n                            if(response.status == 200) this.options.root.toast('success', 'Заказ успешно обновлен!');\r\n                            else this.options.root.toast('danger', 'Ошибка, обратитесь к администратору!');\r\n\r\n                            formStore.set({ isLoad: true });\r\n                            $('#modal').modal('hide');\r\n                        });\r\n                    } else {\r\n                        PhalconApi.orders.create(order).then(status => {\r\n                            if(status == 200) this.options.root.toast('success', 'Заказ создан успешно!');\r\n                            else this.options.root.toast('danger', 'Ошибка, обратитесь к администратору!');\r\n\r\n                            formStore.set({ isLoad: true });\r\n                            $('#modal').modal('hide');\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if(component == 'UsersForm'){\r\n                    const { user, isCorrect } = formStore.get();\r\n                    if(isCorrect){\r\n                        PhalconApi.users.create(user).then(status => {\r\n                            if(status == 200) this.options.root.toast('success', 'Пользователь создан успешно!');\r\n                            else this.options.root.toast('danger', 'Ошибка, обратитесь к администратору!');\r\n                        });\r\n                    } else {\r\n                        this.options.root.toast('danger', 'Есть ошибки в заполнении!');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\t};\r\n</script>\r\n\r\n<style>\r\n    .modal-header{\r\n        border-bottom: 0;\r\n        padding-bottom: 0;\r\n    }\r\n</style>",
    "<div class=\"table-responsive\">\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr>\r\n                {#if withCheckbox}\r\n                <th style=\"width: 55px\">\r\n                    <input type=\"checkbox\" on:click=\"selectAll()\" checked=\"{CheckedCount == items.length}\"/>\r\n                </th>\r\n                {/if}\r\n                {#each columns as column}\r\n                <th on:click=\"filter(column)\" style=\"width: {column.width}px\">\r\n                    <div>\r\n                        {column.name}\r\n                        {#if filter == column.value + (column.sum ? column.sum : '') + (column.each ? column.each.prop : '') + (column.prop ? column.prop : '')}\r\n                        <i class=\"material-icons filter-icon\">filter_list</i> \r\n                        {:elseif filter == column.value + (column.sum ? column.sum : '') + (column.each ? column.each.prop : '') + (column.prop ? column.prop : '') + '-desc'}\r\n                        <i class=\"material-icons filter-icon\" style=\"transform:rotateX(180deg)\">filter_list</i> \r\n                        {/if}\r\n                    </div>\r\n                </th>\r\n                {/each}\r\n                {#if actions}\r\n                <th style=\"width: {50*actions.length}px\"></th>\r\n                {/if}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {#each items as item}\r\n            <tr onclick=\"$(this).find('#check').trigger('click')\" data-checked=\"{item.checked}\">\r\n                {#if withCheckbox}\r\n                <td class=\"align-middle\" style=\"width: 55px\">\r\n                    <input type=\"checkbox\" id=\"check\" onclick=\"event.stopPropagation()\" on:click=\"setTrigger(event, 'check', item)\" bind:checked=item.checked/>\r\n                </td>\r\n                {/if}\r\n                {#each columns as column}\r\n                <td class=\"align-middle\" style=\"width: {column.width}px; color: {column.color}\">\r\n                    {#if column.location}\r\n                        <a href=\"{column.location.href}{item[column.location.itemValueColumnId]}\" target=\"_blank\">{item[column.value] || 'Нет данных'}</a>\r\n                    {:elseif column.count}\r\n                        {item[column.value].length || 'Нет данных'}\r\n                    {:elseif column.img}\r\n                        <img src={item[column.value]} class=\"circle\" width={column.img.width} height={column.img.height} />\r\n                    {:elseif column.sum}\r\n                        {item[column.value].sum(column.sum) || 'Нет данных'}\r\n                    {:elseif column.each}\r\n                        {#each item[column.value] as subItem}\r\n                            {#if column.each.location}\r\n                            <a href=\"{column.each.location.href}{subItem[column.each.location.itemValueColumnId]}\" target=\"_blank\" class=\"badge badge-pill badge-primary\" style=\"margin-right: 5px; margin-bottom: 5px;\">{subItem[column.each.prop]}</a>\r\n                            {:else}\r\n                            <span class=\"badge badge-pill badge-primary\">{subItem[column.each.prop] || 'Нет данных'}</span>\r\n                            {/if}\r\n                        {/each}\r\n                    {:elseif column.prop}\r\n                        {item[column.value] ? item[column.value][column.prop] : 'Нет данных'}\r\n                    {:else}\r\n                        {item[column.value] || 'Нет данных'}\r\n                    {/if}\r\n                </td>\r\n                {/each}\r\n                {#if actions}\r\n                <td class=\"align-middle\" style=\"width: {50*actions.length}px\">\r\n                    {#each actions as action}\r\n                        {#if rights.indexOf(action.value) != -1}\r\n                        <i class=\"material-icons text-primary pointer {action.colorText}\" on:click=\"setTrigger(event, action.value, item)\" id=\"{item.id}-{action.value}-btn\" title=\"{action.name}\">\r\n                            {action.value}\r\n                        </i>\r\n                        {/if}\r\n                    {/each}\r\n                </td>\r\n                {/if}\r\n            </tr>\r\n            {/each}\r\n        </tbody>\r\n        {#if !hiddenTfoot || typeof(hiddenTfoot) == 'undefined'}\r\n        <tfoot>\r\n            <tr>\r\n                {#if withCheckbox}\r\n                <th style=\"width: 55px\">\r\n                    {CheckedCount > 0 ? 'Выделено:'+CheckedCount : 'Итого'}\r\n                </th>\r\n                {/if}\r\n                {#each columns as column}\r\n                <th on:click=\"filter(column)\" style=\"width: {column.width}px\">\r\n                    {#if !column.hiddenTfoot}\r\n                    <div>\r\n                        {#if CheckedCount > 0}\r\n                            {items.sum(column.value, true) ? items.sum(column.value, true).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1 \").replace('.', ',') : ''}\r\n                        {:else}\r\n                            {items.sum(column.value) ? items.sum(column.value).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1 \").replace('.', ',') : ''}\r\n                        {/if}\r\n                    </div>\r\n                    {/if}\r\n                </th>\r\n                {/each}\r\n                {#if actions}\r\n                <th style=\"width: {50*actions.length}px\"></th>\r\n                {/if}\r\n            </tr>\r\n        </tfoot>\r\n        {/if}\r\n    </table>\r\n</div>\r\n\r\n<style>\r\n    thead tr th div{\r\n        cursor: pointer;\r\n        position: relative;\r\n        padding-right: 25px;\r\n    }\r\n    .filter-icon{\r\n        right: 0; top: 0;\r\n        position: absolute;\r\n        padding-left: 5px;\r\n    }\r\n    tbody {\r\n        display:block;\r\n        height:60vh;\r\n        overflow:auto;\r\n    }\r\n    thead, tfoot, tbody tr {\r\n        display:table;\r\n        width:1090px;\r\n        table-layout:fixed;\r\n    }\r\n    thead, tfoot {\r\n        width: calc( 1090px - 1em )\r\n    }\r\n    tbody tr {\r\n        transition: background-color 250ms;\r\n    }\r\n    \r\n    tbody tr:hover{\r\n        background-color: rgba(0,0,0,0.05);\r\n    }\r\n</style>\r\n\r\n<script>\r\n    Array.prototype.sum = function (prop, checked = false) {\r\n        var total = 0;\r\n        for ( var i = 0, _len = this.length; i < _len; i++ ) {\r\n            if(checked){\r\n                if(this[i]['checked'])\r\n                    total += parseFloat(this[i][prop]);\r\n            } else {\r\n                total += parseFloat(this[i][prop]);\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                filter: null,\r\n            };\r\n        },\r\n\r\n        onstate({ changed, current, previous }) {\r\n\t\t\tif (changed.items && !changed.filter) {\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n        oncreate() {\r\n            const self = this;\r\n            this.update();\r\n        },\r\n\r\n        ondestroy() {\r\n            //console.log(this);\r\n        },\r\n\r\n        computed: {\r\n            CheckedCount: ({ items }) => {\r\n                var CheckedCount = 0;\r\n                items.map(item => {\r\n                    if(item.checked) CheckedCount++;\r\n                });\r\n\r\n                return CheckedCount;\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            update() {\r\n                const { defaultFilter } = this.get();\r\n                \r\n                if(defaultFilter){\r\n                    if(defaultFilter.desc){\r\n                        this.filter(defaultFilter);\r\n                    } else {\r\n                        this.filter(defaultFilter);\r\n                        this.filter(defaultFilter);\r\n                    }\r\n                }\r\n            },\r\n            filter(column) {\r\n                if(column.name){\r\n                    var subProp = '';\r\n                    if(column.sum) subProp = column.sum;\r\n                    if(column.prop) subProp = column.prop;\r\n                    if(column.each && column.each.prop) subProp = column.each.prop;\r\n                    const { items, filter } = this.get();\r\n\r\n                    if (filter && filter == column.value + subProp) {\r\n                        this.set({ items: items.sort((a, b) => {\r\n                            if(column.sum){\r\n                                a = a[column.value].sum(subProp); b = b[column.value].sum(subProp);\r\n                            } else if (column.each) {\r\n                                a = a[column.value].length; b = b[column.value].length;\r\n                            } else if (column.prop) {\r\n                                a = a[column.value][column.prop]; b = b[column.value][column.prop];\r\n                            } else {\r\n                                a = a[column.value]; b = b[column.value];\r\n                            }\r\n\r\n                            if(parseFloat(a)) a = parseFloat(a);\r\n                            if(parseFloat(b)) b = parseFloat(b);\r\n\r\n                            return a > b;\r\n                        }), filter: column.value + subProp + '-desc', defaultFilter: column });\r\n                    } else {\r\n                        this.set({ items: items.sort((a, b) => {  \r\n                            if(column.sum){\r\n                                a = a[column.value].sum(subProp); b = b[column.value].sum(subProp);\r\n                            } else if (column.each) {\r\n                                a = a[column.value].length; b = b[column.value].length;\r\n                            } else if (column.prop) {\r\n                                a = a[column.value][column.prop]; b = b[column.value][column.prop];\r\n                            } else {\r\n                                a = a[column.value]; b = b[column.value];\r\n                            }\r\n\r\n                            if(parseFloat(a)) a = parseFloat(a);\r\n                            if(parseFloat(b)) b = parseFloat(b);\r\n\r\n                            return a < b;\r\n                        }), filter: column.value + subProp, defaultFilter: column });\r\n                    }\r\n                }\r\n            },\r\n            setTrigger(event, type, object) {\r\n                if(type != 'check') event.stopPropagation();\r\n                \r\n                const { store } = this.get();\r\n                store.set({ \r\n                    trigger: { type, object } \r\n                });\r\n            },\r\n            selectAll(){\r\n                var hasItemNoneChecked = false;\r\n                $('tbody tr').each(function(index, el){\r\n                    if($(el).attr('data-checked') != 'true') hasItemNoneChecked = true;\r\n                });\r\n\r\n                $('tbody tr').each(function(index, el){\r\n                    if(hasItemNoneChecked){\r\n                        if($(el).attr('data-checked') != 'true') $(el).trigger('click');\r\n                    } else {\r\n                        $(el).trigger('click');\r\n                    }\r\n                });\r\n            },\r\n            propSum(arrObj, prop) {\r\n                var total = 0\r\n                for (var i = 0;  i < arrObj.length; i++) {\r\n                    total += arrObj[i][prop];\r\n                }\r\n                return total\r\n            }\r\n        }\r\n    }\r\n</script>",
    "{#if formStore.get().vkGroup}\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <img src={formStore.get().vkGroup.avatar} class=\"circle\" style=\"width: 100%\" />\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n                <label>Название</label>\r\n                <input type=\"text\" value=\"{formStore.get().vkGroup.name}\" class=\"form-control\" disabled>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Стоимость</label>\r\n                <input type=\"text\" bind:value=\"formStore.get().vkGroup.price\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n{:else}\r\n    <ul class=\"nav nav-tabs\">\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\" class:active=\"loadType == 'oneItem'\" on:click=\"set({ loadType: 'oneItem' })\">Поштучно</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\" class:active=\"loadType == 'listItem'\" on:click=\"set({ loadType: 'listItem' })\">Списком</a>\r\n    </li>\r\n    </ul>\r\n    {#if loadType == 'oneItem'}\r\n        <div class=\"form-group\">\r\n            <label>ID ВК-группы</label>\r\n            <input type=\"number\" bind:value=\"vkGroupId\" on:input=\"set({ isFetchGroup: false })\" class=\"form-control\">\r\n            <small class=\"form-text text-muted\">Обычно указан в ссылке https://vk.com/public[ID].</small>\r\n        </div>\r\n        {#if isFetchGroup}\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <img src=\"{avatar}\" alt=\"...\" class=\"img-thumbnail\">\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <div class=\"form-group\">\r\n                    <label>Название</label>\r\n                    <input type=\"text\" value=\"{name}\" class=\"form-control\" disabled>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {:else}\r\n        <button class=\"btn btn-primary\" on:click=\"getGroupById()\">Получить данные по ВК-группе</button>\r\n        {/if}\r\n    {:else}\r\n        <div class=\"form-group\">\r\n            <label>Список ссылок ВК-групп</label>\r\n            <textarea bind:value=\"vkGroupList\" on:input=\"set({ fetchGroupList: [] })\" class=\"form-control\"></textarea>\r\n            <small class=\"form-text text-muted\">Разделитель между ссылками ПЕРЕНОС СТРОКИ</small>\r\n        </div>\r\n        {#if fetchGroupList.length == 0}\r\n        <button class=\"btn btn-primary\" on:click=\"getGroupByList()\">Получить данные по ВК-группам</button>\r\n        {:else}\r\n        <p>\r\n            Получено {fetchGroupList.length} ВК-групп  \r\n            <span \r\n            class=\"badge {fetchGroupList.length != vkGroupList.split('\\n').length ? 'badge-warning' : 'badge-success'}\">\r\n                {#if fetchGroupList.length != vkGroupList.split('\\n').length}\r\n                Подгружаем...\r\n                {:else}\r\n                Готово\r\n                {/if}\r\n            </span>\r\n        </p>\r\n        <div class=\"progress\">\r\n            <div class=\"progress-bar\" role=\"progressbar\" style=\"width: {(fetchGroupList.length / vkGroupList.split('\\n').length) * 100}%\" aria-valuenow=\"{fetchGroupList.length}\" aria-valuemin=\"0\" aria-valuemax=\"{vkGroupList.split('\\n').length}\"></div>\r\n        </div>\r\n        <ul class=\"list-group\" ref:fetchGroupListEl>\r\n            {#each fetchGroupList as fetchGroup}\r\n            <li class=\"list-group-item\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"{fetchGroup.avatar}\" alt=\"...\" class=\"img-thumbnail\">\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label>Название</label>\r\n                            <input type=\"text\" value=\"{fetchGroup.name}\" class=\"form-control\" disabled>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            {/each}\r\n        </ul>\r\n        {/if}\r\n    {/if}\r\n{/if}\r\n\r\n<script>\r\n    import vkApi from '../vkApi.js';\r\n\r\n\texport default {\r\n        data() {\r\n\t\t\treturn {\r\n                vkGroupId: '',\r\n                loadType: 'oneItem',\r\n                fetchGroupList: []\r\n\t\t\t};\r\n        },\r\n        \r\n        methods: {\r\n\t\t\tgetGroupById() {\r\n                var self = this;\r\n                var { vkGroupId, formStore } = this.get();\r\n                console.log(vkGroupId);\r\n                \r\n                vkApi.getGroupById(vkGroupId).then(group => {\r\n                    const name = group.name;\r\n                    const screenName = group.screen_name;\r\n                    const avatar = group.photo_200;\r\n                        \r\n                    self.set({ name, screenName, avatar, isFetchGroup: true });\r\n                    formStore.set({ vkGroupId, name, screenName, avatar });\r\n                })\r\n            },\r\n            \r\n            getGroupByList(){\r\n                var self = this;\r\n                var { vkGroupList, fetchGroupList, formStore } = this.get();\r\n                var vkGroupArr = vkGroupList.split('\\n'); \r\n                \r\n                vkGroupArr.forEach(function(el, index){\r\n                    setTimeout(function(){\r\n                        var vkGroupId = el.split('public')[1] ? el.split('public')[1] : el.split('club')[1];\r\n                        vkApi.getGroupById(vkGroupId).then(group => {\r\n                            var name = group.name;\r\n                            var screenName = group.screen_name;\r\n                            var avatar = group.photo_200;\r\n                                \r\n                            fetchGroupList.push({ vkGroupId, name, screenName, avatar});\r\n                            self.set({ fetchGroupList });\r\n                            self.refs.fetchGroupListEl.scrollTo(0,self.refs.fetchGroupListEl.scrollHeight);\r\n                            formStore.set({ fetchGroupList, isCorrect: true });\r\n                        })\r\n                    }, 500 * index);\r\n                });\r\n                \r\n            }\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style>\r\n    .nav-tabs,\r\n    .progress{\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    .nav-item{\r\n        cursor: pointer;\r\n    }\r\n\r\n    .list-group{\r\n        height: 300px;\r\n        overflow-y: scroll;\r\n    }\r\n    \r\n</style>"
  ],
  "names": [],
  "mappings": "AAgQC,kBAAG,CAAC,AACH,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,wBAAS,CAAC,AACT,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CAAE,KAAK,CAAE,IAAI,CACzB,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,SAAS,CAAC,KAAK,CAC3B,SAAS,CAAE,WAAW,GAAG,CAAC,AAC3B,CAAC,AAED,wBAAS,MAAM,CAAC,AACf,SAAS,CAAE,WAAW,CAAC,CAAC,CAAC,UAAU,AACpC,CAAC;ACvGE,4BAAa,CAAC,AACV,aAAa,CAAE,CAAC,CAChB,cAAc,CAAE,CAAC,AACrB,CAAC;AClED,mBAAK,CAAC,EAAE,CAAC,EAAE,CAAC,iBAAG,CAAC,AACZ,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,0BAAY,CAAC,AACT,KAAK,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,CAChB,QAAQ,CAAE,QAAQ,CAClB,YAAY,CAAE,GAAG,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACH,QAAQ,KAAK,CACb,OAAO,IAAI,CACX,SAAS,IAAI,AACjB,CAAC,AACD,mBAAK,CAAE,mBAAK,CAAE,mBAAK,CAAC,EAAE,cAAC,CAAC,AACpB,QAAQ,KAAK,CACb,MAAM,MAAM,CACZ,aAAa,KAAK,AACtB,CAAC,AACD,mBAAK,CAAE,KAAK,cAAC,CAAC,AACV,KAAK,CAAE,MAAM,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;IAC/B,CAAC,AACD,mBAAK,CAAC,EAAE,cAAC,CAAC,AACN,UAAU,CAAE,gBAAgB,CAAC,KAAK,AACtC,CAAC,AAED,mBAAK,CAAC,gBAAE,MAAM,CAAC,AACX,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACtC,CAAC;ACYD,uBAAS,CACT,uBAAS,CAAC,AACN,aAAa,CAAE,IAAI,AACvB,CAAC,AAED,uBAAS,CAAC,AACN,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,yBAAW,CAAC,AACR,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,MAAM,AACtB,CAAC"
}